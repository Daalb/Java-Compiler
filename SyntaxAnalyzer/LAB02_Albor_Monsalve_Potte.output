Terminals unused in grammar

    NEW
    COMENTARIO


State 4 conflicts: 1 shift/reduce
State 5 conflicts: 1 shift/reduce
State 8 conflicts: 1 shift/reduce
State 50 conflicts: 1 shift/reduce
State 90 conflicts: 1 reduce/reduce
State 107 conflicts: 2 reduce/reduce
State 109 conflicts: 5 shift/reduce
State 112 conflicts: 2 reduce/reduce
State 113 conflicts: 2 reduce/reduce
State 147 conflicts: 5 shift/reduce
State 148 conflicts: 5 shift/reduce
State 149 conflicts: 5 shift/reduce
State 150 conflicts: 5 shift/reduce
State 151 conflicts: 5 shift/reduce


Grammar

    0 $accept: init $end

    1 init: funct_init
    2     | init funct_init

    3 funct_init: PUBLIC CLASS ID LLAVEA func_main LLAVEC
    4           | PUBLIC CLASS ID LLAVEA LLAVEC
    5           | PUBLIC CLASS ID LLAVEA error LLAVEC
    6           | error funct_init
    7           | funct_init error

    8 func_main: PUBLIC STATIC VOID ID PARENTA STRING CORCHETEA CORCHETEC ID PARENTC bloque
    9          | error func_main

   10 bloque: LLAVEA LLAVEC
   11       | LLAVEA contenido LLAVEC

   12 contenido: statement
   13          | contenido statement
   14          | error statement

   15 statement: expresion
   16          | condicional
   17          | ciclo

   18 expresion: assig_st PUNTOCOMA
   19          | assig_st2 PUNTOCOMA
   20          | assig_st3 PUNTOCOMA
   21          | assig_especial PUNTOCOMA
   22          | operador_incre PUNTOCOMA

   23 condicional: IF PARENTA expre PARENTC bloque
   24            | IF PARENTA expre PARENTC bloque ELSE bloque

   25 ciclo: WHILE PARENTA expre PARENTC bloque
   26      | FOR PARENTA assig_st PUNTOCOMA comparacion PUNTOCOMA assig_especial PARENTC bloque

   27 expre: condicional_expr
   28      | comparacion

   29 comparacion: PARENTA comparacion PARENTC
   30            | exp_simple MENORIGUAL exp_simple
   31            | exp_simple MAYORIGUAL exp_simple
   32            | exp_simple DIFERENTE exp_simple
   33            | exp_simple IGUAL exp_simple
   34            | exp_simple MENOR exp_simple
   35            | exp_simple MAYOR exp_simple
   36            | ID
   37            | condicional_expr

   38 condicional_expr: or_ex
   39                 | and_ex
   40                 | not_ex

   41 not_ex: NOT comparacion

   42 or_ex: comparacion OR comparacion
   43      | OR condicional_expr

   44 and_ex: comparacion AND comparacion
   45       | AND condicional_expr

   46 assig_especial: ID MENMEN
   47               | ID MASMAS
   48               | ID ASIG assig_especial
   49               | operador_incre

   50 operador_incre: ID ope_espcial exp_simple

   51 assig_st: tipo ID
   52         | assig_st ASIG exp_simple
   53         | assig_st ASIG assig_st2
   54         | assig_st ASIG anidar

   55 assig_st3: ID ASIG assig_st2
   56          | ID ASIG anidar

   57 assig_st2: exp_simple
   58          | assig_st2 operador asig_compleja

   59 anidar: PARENTA asig_compleja PARENTC
   60       | anidar operador anidar

   61 asig_compleja: exp_simple
   62              | asig_compleja operador asig_compleja
   63              | anidar operador asig_compleja
   64              | asig_compleja operador anidar

   65 operador: SUMA
   66         | RESTA
   67         | MULT
   68         | DIV
   69         | MOD

   70 exp_simple: CADENA
   71           | ENTERO
   72           | ID
   73           | REAL

   74 tipo: INT
   75     | STRING
   76     | DOUBLE
   77     | CHAR

   78 ope_espcial: ASIGMAS
   79            | ASIGDIV
   80            | ASIGMEN
   81            | ASIGMULT


Terminals, with rules where they appear

    $end (0) 0
    error (256) 5 6 7 9 14
    IF (258) 23 24
    ELSE (259) 24
    FOR (260) 26
    WHILE (261) 25
    DOUBLE (262) 76
    INT (263) 74
    STRING (264) 8 75
    CHAR (265) 77
    NEW (266)
    PUBLIC (267) 3 4 5 8
    CLASS (268) 3 4 5
    STATIC (269) 8
    VOID (270) 8
    MULT (271) 67
    SUMA (272) 65
    RESTA (273) 66
    DIV (274) 68
    ASIG (275) 48 52 53 54 55 56
    MOD (276) 69
    AND (277) 44 45
    OR (278) 42 43
    NOT (279) 41
    MASMAS (280) 47
    MENMEN (281) 46
    ASIGMAS (282) 78
    ASIGMEN (283) 80
    ASIGMULT (284) 81
    ASIGDIV (285) 79
    LLAVEA (286) 3 4 5 10 11
    LLAVEC (287) 3 4 5 10 11
    PARENTA (288) 8 23 24 25 26 29 59
    PARENTC (289) 8 23 24 25 26 29 59
    CORCHETEA (290) 8
    CORCHETEC (291) 8
    PUNTOCOMA (292) 18 19 20 21 22 26
    IGUAL (293) 33
    MENORIGUAL (294) 30
    MAYORIGUAL (295) 31
    DIFERENTE (296) 32
    MAYOR (297) 35
    MENOR (298) 34
    ENTERO (299) 71
    CADENA (300) 70
    COMENTARIO (301)
    REAL (302) 73
    ID (303) 3 4 5 8 36 46 47 48 50 51 55 56 72


Nonterminals, with rules where they appear

    $accept (49)
        on left: 0
    init (50)
        on left: 1 2
        on right: 0 2
    funct_init (51)
        on left: 3 4 5 6 7
        on right: 1 2 6 7
    func_main (52)
        on left: 8 9
        on right: 3 9
    bloque (53)
        on left: 10 11
        on right: 8 23 24 25 26
    contenido (54)
        on left: 12 13 14
        on right: 11 13
    statement (55)
        on left: 15 16 17
        on right: 12 13 14
    expresion (56)
        on left: 18 19 20 21 22
        on right: 15
    condicional (57)
        on left: 23 24
        on right: 16
    ciclo (58)
        on left: 25 26
        on right: 17
    expre (59)
        on left: 27 28
        on right: 23 24 25
    comparacion (60)
        on left: 29 30 31 32 33 34 35 36 37
        on right: 26 28 29 41 42 44
    condicional_expr (61)
        on left: 38 39 40
        on right: 27 37 43 45
    not_ex (62)
        on left: 41
        on right: 40
    or_ex (63)
        on left: 42 43
        on right: 38
    and_ex (64)
        on left: 44 45
        on right: 39
    assig_especial (65)
        on left: 46 47 48 49
        on right: 21 26 48
    operador_incre (66)
        on left: 50
        on right: 22 49
    assig_st (67)
        on left: 51 52 53 54
        on right: 18 26 52 53 54
    assig_st3 (68)
        on left: 55 56
        on right: 20
    assig_st2 (69)
        on left: 57 58
        on right: 19 53 55 58
    anidar (70)
        on left: 59 60
        on right: 54 56 60 63 64
    asig_compleja (71)
        on left: 61 62 63 64
        on right: 58 59 62 63 64
    operador (72)
        on left: 65 66 67 68 69
        on right: 58 60 62 63 64
    exp_simple (73)
        on left: 70 71 72 73
        on right: 30 31 32 33 34 35 50 52 57 61
    tipo (74)
        on left: 74 75 76 77
        on right: 51
    ope_espcial (75)
        on left: 78 79 80 81
        on right: 50


State 0

    0 $accept: • init $end

    error   shift, and go to state 1
    PUBLIC  shift, and go to state 2

    init        go to state 3
    funct_init  go to state 4


State 1

    6 funct_init: error • funct_init

    error   shift, and go to state 1
    PUBLIC  shift, and go to state 2

    funct_init  go to state 5


State 2

    3 funct_init: PUBLIC • CLASS ID LLAVEA func_main LLAVEC
    4           | PUBLIC • CLASS ID LLAVEA LLAVEC
    5           | PUBLIC • CLASS ID LLAVEA error LLAVEC

    CLASS  shift, and go to state 6


State 3

    0 $accept: init • $end
    2 init: init • funct_init

    $end    shift, and go to state 7
    error   shift, and go to state 1
    PUBLIC  shift, and go to state 2

    funct_init  go to state 8


State 4

    1 init: funct_init •
    7 funct_init: funct_init • error

    error  shift, and go to state 9

    $end    reduce using rule 1 (init)
    error   [reduce using rule 1 (init)]
    PUBLIC  reduce using rule 1 (init)


State 5

    6 funct_init: error funct_init •
    7           | funct_init • error

    error  shift, and go to state 9

    $end    reduce using rule 6 (funct_init)
    error   [reduce using rule 6 (funct_init)]
    PUBLIC  reduce using rule 6 (funct_init)


State 6

    3 funct_init: PUBLIC CLASS • ID LLAVEA func_main LLAVEC
    4           | PUBLIC CLASS • ID LLAVEA LLAVEC
    5           | PUBLIC CLASS • ID LLAVEA error LLAVEC

    ID  shift, and go to state 10


State 7

    0 $accept: init $end •

    $default  accept


State 8

    2 init: init funct_init •
    7 funct_init: funct_init • error

    error  shift, and go to state 9

    $end    reduce using rule 2 (init)
    error   [reduce using rule 2 (init)]
    PUBLIC  reduce using rule 2 (init)


State 9

    7 funct_init: funct_init error •

    $default  reduce using rule 7 (funct_init)


State 10

    3 funct_init: PUBLIC CLASS ID • LLAVEA func_main LLAVEC
    4           | PUBLIC CLASS ID • LLAVEA LLAVEC
    5           | PUBLIC CLASS ID • LLAVEA error LLAVEC

    LLAVEA  shift, and go to state 11


State 11

    3 funct_init: PUBLIC CLASS ID LLAVEA • func_main LLAVEC
    4           | PUBLIC CLASS ID LLAVEA • LLAVEC
    5           | PUBLIC CLASS ID LLAVEA • error LLAVEC

    error   shift, and go to state 12
    PUBLIC  shift, and go to state 13
    LLAVEC  shift, and go to state 14

    func_main  go to state 15


State 12

    5 funct_init: PUBLIC CLASS ID LLAVEA error • LLAVEC
    9 func_main: error • func_main

    error   shift, and go to state 16
    PUBLIC  shift, and go to state 13
    LLAVEC  shift, and go to state 17

    func_main  go to state 18


State 13

    8 func_main: PUBLIC • STATIC VOID ID PARENTA STRING CORCHETEA CORCHETEC ID PARENTC bloque

    STATIC  shift, and go to state 19


State 14

    4 funct_init: PUBLIC CLASS ID LLAVEA LLAVEC •

    $default  reduce using rule 4 (funct_init)


State 15

    3 funct_init: PUBLIC CLASS ID LLAVEA func_main • LLAVEC

    LLAVEC  shift, and go to state 20


State 16

    9 func_main: error • func_main

    error   shift, and go to state 16
    PUBLIC  shift, and go to state 13

    func_main  go to state 18


State 17

    5 funct_init: PUBLIC CLASS ID LLAVEA error LLAVEC •

    $default  reduce using rule 5 (funct_init)


State 18

    9 func_main: error func_main •

    $default  reduce using rule 9 (func_main)


State 19

    8 func_main: PUBLIC STATIC • VOID ID PARENTA STRING CORCHETEA CORCHETEC ID PARENTC bloque

    VOID  shift, and go to state 21


State 20

    3 funct_init: PUBLIC CLASS ID LLAVEA func_main LLAVEC •

    $default  reduce using rule 3 (funct_init)


State 21

    8 func_main: PUBLIC STATIC VOID • ID PARENTA STRING CORCHETEA CORCHETEC ID PARENTC bloque

    ID  shift, and go to state 22


State 22

    8 func_main: PUBLIC STATIC VOID ID • PARENTA STRING CORCHETEA CORCHETEC ID PARENTC bloque

    PARENTA  shift, and go to state 23


State 23

    8 func_main: PUBLIC STATIC VOID ID PARENTA • STRING CORCHETEA CORCHETEC ID PARENTC bloque

    STRING  shift, and go to state 24


State 24

    8 func_main: PUBLIC STATIC VOID ID PARENTA STRING • CORCHETEA CORCHETEC ID PARENTC bloque

    CORCHETEA  shift, and go to state 25


State 25

    8 func_main: PUBLIC STATIC VOID ID PARENTA STRING CORCHETEA • CORCHETEC ID PARENTC bloque

    CORCHETEC  shift, and go to state 26


State 26

    8 func_main: PUBLIC STATIC VOID ID PARENTA STRING CORCHETEA CORCHETEC • ID PARENTC bloque

    ID  shift, and go to state 27


State 27

    8 func_main: PUBLIC STATIC VOID ID PARENTA STRING CORCHETEA CORCHETEC ID • PARENTC bloque

    PARENTC  shift, and go to state 28


State 28

    8 func_main: PUBLIC STATIC VOID ID PARENTA STRING CORCHETEA CORCHETEC ID PARENTC • bloque

    LLAVEA  shift, and go to state 29

    bloque  go to state 30


State 29

   10 bloque: LLAVEA • LLAVEC
   11       | LLAVEA • contenido LLAVEC

    error   shift, and go to state 31
    IF      shift, and go to state 32
    FOR     shift, and go to state 33
    WHILE   shift, and go to state 34
    DOUBLE  shift, and go to state 35
    INT     shift, and go to state 36
    STRING  shift, and go to state 37
    CHAR    shift, and go to state 38
    LLAVEC  shift, and go to state 39
    ENTERO  shift, and go to state 40
    CADENA  shift, and go to state 41
    REAL    shift, and go to state 42
    ID      shift, and go to state 43

    contenido       go to state 44
    statement       go to state 45
    expresion       go to state 46
    condicional     go to state 47
    ciclo           go to state 48
    assig_especial  go to state 49
    operador_incre  go to state 50
    assig_st        go to state 51
    assig_st3       go to state 52
    assig_st2       go to state 53
    exp_simple      go to state 54
    tipo            go to state 55


State 30

    8 func_main: PUBLIC STATIC VOID ID PARENTA STRING CORCHETEA CORCHETEC ID PARENTC bloque •

    $default  reduce using rule 8 (func_main)


State 31

   14 contenido: error • statement

    IF      shift, and go to state 32
    FOR     shift, and go to state 33
    WHILE   shift, and go to state 34
    DOUBLE  shift, and go to state 35
    INT     shift, and go to state 36
    STRING  shift, and go to state 37
    CHAR    shift, and go to state 38
    ENTERO  shift, and go to state 40
    CADENA  shift, and go to state 41
    REAL    shift, and go to state 42
    ID      shift, and go to state 43

    statement       go to state 56
    expresion       go to state 46
    condicional     go to state 47
    ciclo           go to state 48
    assig_especial  go to state 49
    operador_incre  go to state 50
    assig_st        go to state 51
    assig_st3       go to state 52
    assig_st2       go to state 53
    exp_simple      go to state 54
    tipo            go to state 55


State 32

   23 condicional: IF • PARENTA expre PARENTC bloque
   24            | IF • PARENTA expre PARENTC bloque ELSE bloque

    PARENTA  shift, and go to state 57


State 33

   26 ciclo: FOR • PARENTA assig_st PUNTOCOMA comparacion PUNTOCOMA assig_especial PARENTC bloque

    PARENTA  shift, and go to state 58


State 34

   25 ciclo: WHILE • PARENTA expre PARENTC bloque

    PARENTA  shift, and go to state 59


State 35

   76 tipo: DOUBLE •

    $default  reduce using rule 76 (tipo)


State 36

   74 tipo: INT •

    $default  reduce using rule 74 (tipo)


State 37

   75 tipo: STRING •

    $default  reduce using rule 75 (tipo)


State 38

   77 tipo: CHAR •

    $default  reduce using rule 77 (tipo)


State 39

   10 bloque: LLAVEA LLAVEC •

    $default  reduce using rule 10 (bloque)


State 40

   71 exp_simple: ENTERO •

    $default  reduce using rule 71 (exp_simple)


State 41

   70 exp_simple: CADENA •

    $default  reduce using rule 70 (exp_simple)


State 42

   73 exp_simple: REAL •

    $default  reduce using rule 73 (exp_simple)


State 43

   46 assig_especial: ID • MENMEN
   47               | ID • MASMAS
   48               | ID • ASIG assig_especial
   50 operador_incre: ID • ope_espcial exp_simple
   55 assig_st3: ID • ASIG assig_st2
   56          | ID • ASIG anidar
   72 exp_simple: ID •

    ASIG      shift, and go to state 60
    MASMAS    shift, and go to state 61
    MENMEN    shift, and go to state 62
    ASIGMAS   shift, and go to state 63
    ASIGMEN   shift, and go to state 64
    ASIGMULT  shift, and go to state 65
    ASIGDIV   shift, and go to state 66

    $default  reduce using rule 72 (exp_simple)

    ope_espcial  go to state 67


State 44

   11 bloque: LLAVEA contenido • LLAVEC
   13 contenido: contenido • statement

    IF      shift, and go to state 32
    FOR     shift, and go to state 33
    WHILE   shift, and go to state 34
    DOUBLE  shift, and go to state 35
    INT     shift, and go to state 36
    STRING  shift, and go to state 37
    CHAR    shift, and go to state 38
    LLAVEC  shift, and go to state 68
    ENTERO  shift, and go to state 40
    CADENA  shift, and go to state 41
    REAL    shift, and go to state 42
    ID      shift, and go to state 43

    statement       go to state 69
    expresion       go to state 46
    condicional     go to state 47
    ciclo           go to state 48
    assig_especial  go to state 49
    operador_incre  go to state 50
    assig_st        go to state 51
    assig_st3       go to state 52
    assig_st2       go to state 53
    exp_simple      go to state 54
    tipo            go to state 55


State 45

   12 contenido: statement •

    $default  reduce using rule 12 (contenido)


State 46

   15 statement: expresion •

    $default  reduce using rule 15 (statement)


State 47

   16 statement: condicional •

    $default  reduce using rule 16 (statement)


State 48

   17 statement: ciclo •

    $default  reduce using rule 17 (statement)


State 49

   21 expresion: assig_especial • PUNTOCOMA

    PUNTOCOMA  shift, and go to state 70


State 50

   22 expresion: operador_incre • PUNTOCOMA
   49 assig_especial: operador_incre •

    PUNTOCOMA  shift, and go to state 71

    PUNTOCOMA  [reduce using rule 49 (assig_especial)]


State 51

   18 expresion: assig_st • PUNTOCOMA
   52 assig_st: assig_st • ASIG exp_simple
   53         | assig_st • ASIG assig_st2
   54         | assig_st • ASIG anidar

    ASIG       shift, and go to state 72
    PUNTOCOMA  shift, and go to state 73


State 52

   20 expresion: assig_st3 • PUNTOCOMA

    PUNTOCOMA  shift, and go to state 74


State 53

   19 expresion: assig_st2 • PUNTOCOMA
   58 assig_st2: assig_st2 • operador asig_compleja

    MULT       shift, and go to state 75
    SUMA       shift, and go to state 76
    RESTA      shift, and go to state 77
    DIV        shift, and go to state 78
    MOD        shift, and go to state 79
    PUNTOCOMA  shift, and go to state 80

    operador  go to state 81


State 54

   57 assig_st2: exp_simple •

    $default  reduce using rule 57 (assig_st2)


State 55

   51 assig_st: tipo • ID

    ID  shift, and go to state 82


State 56

   14 contenido: error statement •

    $default  reduce using rule 14 (contenido)


State 57

   23 condicional: IF PARENTA • expre PARENTC bloque
   24            | IF PARENTA • expre PARENTC bloque ELSE bloque

    AND      shift, and go to state 83
    OR       shift, and go to state 84
    NOT      shift, and go to state 85
    PARENTA  shift, and go to state 86
    ENTERO   shift, and go to state 40
    CADENA   shift, and go to state 41
    REAL     shift, and go to state 42
    ID       shift, and go to state 87

    expre             go to state 88
    comparacion       go to state 89
    condicional_expr  go to state 90
    not_ex            go to state 91
    or_ex             go to state 92
    and_ex            go to state 93
    exp_simple        go to state 94


State 58

   26 ciclo: FOR PARENTA • assig_st PUNTOCOMA comparacion PUNTOCOMA assig_especial PARENTC bloque

    DOUBLE  shift, and go to state 35
    INT     shift, and go to state 36
    STRING  shift, and go to state 37
    CHAR    shift, and go to state 38

    assig_st  go to state 95
    tipo      go to state 55


State 59

   25 ciclo: WHILE PARENTA • expre PARENTC bloque

    AND      shift, and go to state 83
    OR       shift, and go to state 84
    NOT      shift, and go to state 85
    PARENTA  shift, and go to state 86
    ENTERO   shift, and go to state 40
    CADENA   shift, and go to state 41
    REAL     shift, and go to state 42
    ID       shift, and go to state 87

    expre             go to state 96
    comparacion       go to state 89
    condicional_expr  go to state 90
    not_ex            go to state 91
    or_ex             go to state 92
    and_ex            go to state 93
    exp_simple        go to state 94


State 60

   48 assig_especial: ID ASIG • assig_especial
   55 assig_st3: ID ASIG • assig_st2
   56          | ID ASIG • anidar

    PARENTA  shift, and go to state 97
    ENTERO   shift, and go to state 40
    CADENA   shift, and go to state 41
    REAL     shift, and go to state 42
    ID       shift, and go to state 98

    assig_especial  go to state 99
    operador_incre  go to state 100
    assig_st2       go to state 101
    anidar          go to state 102
    exp_simple      go to state 54


State 61

   47 assig_especial: ID MASMAS •

    $default  reduce using rule 47 (assig_especial)


State 62

   46 assig_especial: ID MENMEN •

    $default  reduce using rule 46 (assig_especial)


State 63

   78 ope_espcial: ASIGMAS •

    $default  reduce using rule 78 (ope_espcial)


State 64

   80 ope_espcial: ASIGMEN •

    $default  reduce using rule 80 (ope_espcial)


State 65

   81 ope_espcial: ASIGMULT •

    $default  reduce using rule 81 (ope_espcial)


State 66

   79 ope_espcial: ASIGDIV •

    $default  reduce using rule 79 (ope_espcial)


State 67

   50 operador_incre: ID ope_espcial • exp_simple

    ENTERO  shift, and go to state 40
    CADENA  shift, and go to state 41
    REAL    shift, and go to state 42
    ID      shift, and go to state 103

    exp_simple  go to state 104


State 68

   11 bloque: LLAVEA contenido LLAVEC •

    $default  reduce using rule 11 (bloque)


State 69

   13 contenido: contenido statement •

    $default  reduce using rule 13 (contenido)


State 70

   21 expresion: assig_especial PUNTOCOMA •

    $default  reduce using rule 21 (expresion)


State 71

   22 expresion: operador_incre PUNTOCOMA •

    $default  reduce using rule 22 (expresion)


State 72

   52 assig_st: assig_st ASIG • exp_simple
   53         | assig_st ASIG • assig_st2
   54         | assig_st ASIG • anidar

    PARENTA  shift, and go to state 97
    ENTERO   shift, and go to state 40
    CADENA   shift, and go to state 41
    REAL     shift, and go to state 42
    ID       shift, and go to state 103

    assig_st2   go to state 105
    anidar      go to state 106
    exp_simple  go to state 107


State 73

   18 expresion: assig_st PUNTOCOMA •

    $default  reduce using rule 18 (expresion)


State 74

   20 expresion: assig_st3 PUNTOCOMA •

    $default  reduce using rule 20 (expresion)


State 75

   67 operador: MULT •

    $default  reduce using rule 67 (operador)


State 76

   65 operador: SUMA •

    $default  reduce using rule 65 (operador)


State 77

   66 operador: RESTA •

    $default  reduce using rule 66 (operador)


State 78

   68 operador: DIV •

    $default  reduce using rule 68 (operador)


State 79

   69 operador: MOD •

    $default  reduce using rule 69 (operador)


State 80

   19 expresion: assig_st2 PUNTOCOMA •

    $default  reduce using rule 19 (expresion)


State 81

   58 assig_st2: assig_st2 operador • asig_compleja

    PARENTA  shift, and go to state 97
    ENTERO   shift, and go to state 40
    CADENA   shift, and go to state 41
    REAL     shift, and go to state 42
    ID       shift, and go to state 103

    anidar         go to state 108
    asig_compleja  go to state 109
    exp_simple     go to state 110


State 82

   51 assig_st: tipo ID •

    $default  reduce using rule 51 (assig_st)


State 83

   45 and_ex: AND • condicional_expr

    AND      shift, and go to state 83
    OR       shift, and go to state 84
    NOT      shift, and go to state 85
    PARENTA  shift, and go to state 86
    ENTERO   shift, and go to state 40
    CADENA   shift, and go to state 41
    REAL     shift, and go to state 42
    ID       shift, and go to state 87

    comparacion       go to state 111
    condicional_expr  go to state 112
    not_ex            go to state 91
    or_ex             go to state 92
    and_ex            go to state 93
    exp_simple        go to state 94


State 84

   43 or_ex: OR • condicional_expr

    AND      shift, and go to state 83
    OR       shift, and go to state 84
    NOT      shift, and go to state 85
    PARENTA  shift, and go to state 86
    ENTERO   shift, and go to state 40
    CADENA   shift, and go to state 41
    REAL     shift, and go to state 42
    ID       shift, and go to state 87

    comparacion       go to state 111
    condicional_expr  go to state 113
    not_ex            go to state 91
    or_ex             go to state 92
    and_ex            go to state 93
    exp_simple        go to state 94


State 85

   41 not_ex: NOT • comparacion

    AND      shift, and go to state 83
    OR       shift, and go to state 84
    NOT      shift, and go to state 85
    PARENTA  shift, and go to state 86
    ENTERO   shift, and go to state 40
    CADENA   shift, and go to state 41
    REAL     shift, and go to state 42
    ID       shift, and go to state 87

    comparacion       go to state 114
    condicional_expr  go to state 115
    not_ex            go to state 91
    or_ex             go to state 92
    and_ex            go to state 93
    exp_simple        go to state 94


State 86

   29 comparacion: PARENTA • comparacion PARENTC

    AND      shift, and go to state 83
    OR       shift, and go to state 84
    NOT      shift, and go to state 85
    PARENTA  shift, and go to state 86
    ENTERO   shift, and go to state 40
    CADENA   shift, and go to state 41
    REAL     shift, and go to state 42
    ID       shift, and go to state 87

    comparacion       go to state 116
    condicional_expr  go to state 115
    not_ex            go to state 91
    or_ex             go to state 92
    and_ex            go to state 93
    exp_simple        go to state 94


State 87

   36 comparacion: ID •
   72 exp_simple: ID •

    AND        reduce using rule 36 (comparacion)
    OR         reduce using rule 36 (comparacion)
    PARENTC    reduce using rule 36 (comparacion)
    PUNTOCOMA  reduce using rule 36 (comparacion)
    $default   reduce using rule 72 (exp_simple)


State 88

   23 condicional: IF PARENTA expre • PARENTC bloque
   24            | IF PARENTA expre • PARENTC bloque ELSE bloque

    PARENTC  shift, and go to state 117


State 89

   28 expre: comparacion •
   42 or_ex: comparacion • OR comparacion
   44 and_ex: comparacion • AND comparacion

    AND  shift, and go to state 118
    OR   shift, and go to state 119

    $default  reduce using rule 28 (expre)


State 90

   27 expre: condicional_expr •
   37 comparacion: condicional_expr •

    PARENTC   reduce using rule 27 (expre)
    PARENTC   [reduce using rule 37 (comparacion)]
    $default  reduce using rule 37 (comparacion)


State 91

   40 condicional_expr: not_ex •

    $default  reduce using rule 40 (condicional_expr)


State 92

   38 condicional_expr: or_ex •

    $default  reduce using rule 38 (condicional_expr)


State 93

   39 condicional_expr: and_ex •

    $default  reduce using rule 39 (condicional_expr)


State 94

   30 comparacion: exp_simple • MENORIGUAL exp_simple
   31            | exp_simple • MAYORIGUAL exp_simple
   32            | exp_simple • DIFERENTE exp_simple
   33            | exp_simple • IGUAL exp_simple
   34            | exp_simple • MENOR exp_simple
   35            | exp_simple • MAYOR exp_simple

    IGUAL       shift, and go to state 120
    MENORIGUAL  shift, and go to state 121
    MAYORIGUAL  shift, and go to state 122
    DIFERENTE   shift, and go to state 123
    MAYOR       shift, and go to state 124
    MENOR       shift, and go to state 125


State 95

   26 ciclo: FOR PARENTA assig_st • PUNTOCOMA comparacion PUNTOCOMA assig_especial PARENTC bloque
   52 assig_st: assig_st • ASIG exp_simple
   53         | assig_st • ASIG assig_st2
   54         | assig_st • ASIG anidar

    ASIG       shift, and go to state 72
    PUNTOCOMA  shift, and go to state 126


State 96

   25 ciclo: WHILE PARENTA expre • PARENTC bloque

    PARENTC  shift, and go to state 127


State 97

   59 anidar: PARENTA • asig_compleja PARENTC

    PARENTA  shift, and go to state 97
    ENTERO   shift, and go to state 40
    CADENA   shift, and go to state 41
    REAL     shift, and go to state 42
    ID       shift, and go to state 103

    anidar         go to state 108
    asig_compleja  go to state 128
    exp_simple     go to state 110


State 98

   46 assig_especial: ID • MENMEN
   47               | ID • MASMAS
   48               | ID • ASIG assig_especial
   50 operador_incre: ID • ope_espcial exp_simple
   72 exp_simple: ID •

    ASIG      shift, and go to state 129
    MASMAS    shift, and go to state 61
    MENMEN    shift, and go to state 62
    ASIGMAS   shift, and go to state 63
    ASIGMEN   shift, and go to state 64
    ASIGMULT  shift, and go to state 65
    ASIGDIV   shift, and go to state 66

    $default  reduce using rule 72 (exp_simple)

    ope_espcial  go to state 67


State 99

   48 assig_especial: ID ASIG assig_especial •

    $default  reduce using rule 48 (assig_especial)


State 100

   49 assig_especial: operador_incre •

    $default  reduce using rule 49 (assig_especial)


State 101

   55 assig_st3: ID ASIG assig_st2 •
   58 assig_st2: assig_st2 • operador asig_compleja

    MULT   shift, and go to state 75
    SUMA   shift, and go to state 76
    RESTA  shift, and go to state 77
    DIV    shift, and go to state 78
    MOD    shift, and go to state 79

    $default  reduce using rule 55 (assig_st3)

    operador  go to state 81


State 102

   56 assig_st3: ID ASIG anidar •
   60 anidar: anidar • operador anidar

    MULT   shift, and go to state 75
    SUMA   shift, and go to state 76
    RESTA  shift, and go to state 77
    DIV    shift, and go to state 78
    MOD    shift, and go to state 79

    $default  reduce using rule 56 (assig_st3)

    operador  go to state 130


State 103

   72 exp_simple: ID •

    $default  reduce using rule 72 (exp_simple)


State 104

   50 operador_incre: ID ope_espcial exp_simple •

    $default  reduce using rule 50 (operador_incre)


State 105

   53 assig_st: assig_st ASIG assig_st2 •
   58 assig_st2: assig_st2 • operador asig_compleja

    MULT   shift, and go to state 75
    SUMA   shift, and go to state 76
    RESTA  shift, and go to state 77
    DIV    shift, and go to state 78
    MOD    shift, and go to state 79

    $default  reduce using rule 53 (assig_st)

    operador  go to state 81


State 106

   54 assig_st: assig_st ASIG anidar •
   60 anidar: anidar • operador anidar

    MULT   shift, and go to state 75
    SUMA   shift, and go to state 76
    RESTA  shift, and go to state 77
    DIV    shift, and go to state 78
    MOD    shift, and go to state 79

    $default  reduce using rule 54 (assig_st)

    operador  go to state 130


State 107

   52 assig_st: assig_st ASIG exp_simple •
   57 assig_st2: exp_simple •

    ASIG       reduce using rule 52 (assig_st)
    ASIG       [reduce using rule 57 (assig_st2)]
    PUNTOCOMA  reduce using rule 52 (assig_st)
    PUNTOCOMA  [reduce using rule 57 (assig_st2)]
    $default   reduce using rule 57 (assig_st2)


State 108

   60 anidar: anidar • operador anidar
   63 asig_compleja: anidar • operador asig_compleja

    MULT   shift, and go to state 75
    SUMA   shift, and go to state 76
    RESTA  shift, and go to state 77
    DIV    shift, and go to state 78
    MOD    shift, and go to state 79

    operador  go to state 131


State 109

   58 assig_st2: assig_st2 operador asig_compleja •
   62 asig_compleja: asig_compleja • operador asig_compleja
   64              | asig_compleja • operador anidar

    MULT   shift, and go to state 75
    SUMA   shift, and go to state 76
    RESTA  shift, and go to state 77
    DIV    shift, and go to state 78
    MOD    shift, and go to state 79

    MULT      [reduce using rule 58 (assig_st2)]
    SUMA      [reduce using rule 58 (assig_st2)]
    RESTA     [reduce using rule 58 (assig_st2)]
    DIV       [reduce using rule 58 (assig_st2)]
    MOD       [reduce using rule 58 (assig_st2)]
    $default  reduce using rule 58 (assig_st2)

    operador  go to state 132


State 110

   61 asig_compleja: exp_simple •

    $default  reduce using rule 61 (asig_compleja)


State 111

   42 or_ex: comparacion • OR comparacion
   44 and_ex: comparacion • AND comparacion

    AND  shift, and go to state 118
    OR   shift, and go to state 119


State 112

   37 comparacion: condicional_expr •
   45 and_ex: AND condicional_expr •

    AND        reduce using rule 37 (comparacion)
    AND        [reduce using rule 45 (and_ex)]
    OR         reduce using rule 37 (comparacion)
    OR         [reduce using rule 45 (and_ex)]
    PARENTC    reduce using rule 45 (and_ex)
    PUNTOCOMA  reduce using rule 45 (and_ex)
    $default   reduce using rule 37 (comparacion)


State 113

   37 comparacion: condicional_expr •
   43 or_ex: OR condicional_expr •

    AND        reduce using rule 37 (comparacion)
    AND        [reduce using rule 43 (or_ex)]
    OR         reduce using rule 37 (comparacion)
    OR         [reduce using rule 43 (or_ex)]
    PARENTC    reduce using rule 43 (or_ex)
    PUNTOCOMA  reduce using rule 43 (or_ex)
    $default   reduce using rule 37 (comparacion)


State 114

   41 not_ex: NOT comparacion •
   42 or_ex: comparacion • OR comparacion
   44 and_ex: comparacion • AND comparacion

    $default  reduce using rule 41 (not_ex)


State 115

   37 comparacion: condicional_expr •

    $default  reduce using rule 37 (comparacion)


State 116

   29 comparacion: PARENTA comparacion • PARENTC
   42 or_ex: comparacion • OR comparacion
   44 and_ex: comparacion • AND comparacion

    AND      shift, and go to state 118
    OR       shift, and go to state 119
    PARENTC  shift, and go to state 133


State 117

   23 condicional: IF PARENTA expre PARENTC • bloque
   24            | IF PARENTA expre PARENTC • bloque ELSE bloque

    LLAVEA  shift, and go to state 29

    bloque  go to state 134


State 118

   44 and_ex: comparacion AND • comparacion

    AND      shift, and go to state 83
    OR       shift, and go to state 84
    NOT      shift, and go to state 85
    PARENTA  shift, and go to state 86
    ENTERO   shift, and go to state 40
    CADENA   shift, and go to state 41
    REAL     shift, and go to state 42
    ID       shift, and go to state 87

    comparacion       go to state 135
    condicional_expr  go to state 115
    not_ex            go to state 91
    or_ex             go to state 92
    and_ex            go to state 93
    exp_simple        go to state 94


State 119

   42 or_ex: comparacion OR • comparacion

    AND      shift, and go to state 83
    OR       shift, and go to state 84
    NOT      shift, and go to state 85
    PARENTA  shift, and go to state 86
    ENTERO   shift, and go to state 40
    CADENA   shift, and go to state 41
    REAL     shift, and go to state 42
    ID       shift, and go to state 87

    comparacion       go to state 136
    condicional_expr  go to state 115
    not_ex            go to state 91
    or_ex             go to state 92
    and_ex            go to state 93
    exp_simple        go to state 94


State 120

   33 comparacion: exp_simple IGUAL • exp_simple

    ENTERO  shift, and go to state 40
    CADENA  shift, and go to state 41
    REAL    shift, and go to state 42
    ID      shift, and go to state 103

    exp_simple  go to state 137


State 121

   30 comparacion: exp_simple MENORIGUAL • exp_simple

    ENTERO  shift, and go to state 40
    CADENA  shift, and go to state 41
    REAL    shift, and go to state 42
    ID      shift, and go to state 103

    exp_simple  go to state 138


State 122

   31 comparacion: exp_simple MAYORIGUAL • exp_simple

    ENTERO  shift, and go to state 40
    CADENA  shift, and go to state 41
    REAL    shift, and go to state 42
    ID      shift, and go to state 103

    exp_simple  go to state 139


State 123

   32 comparacion: exp_simple DIFERENTE • exp_simple

    ENTERO  shift, and go to state 40
    CADENA  shift, and go to state 41
    REAL    shift, and go to state 42
    ID      shift, and go to state 103

    exp_simple  go to state 140


State 124

   35 comparacion: exp_simple MAYOR • exp_simple

    ENTERO  shift, and go to state 40
    CADENA  shift, and go to state 41
    REAL    shift, and go to state 42
    ID      shift, and go to state 103

    exp_simple  go to state 141


State 125

   34 comparacion: exp_simple MENOR • exp_simple

    ENTERO  shift, and go to state 40
    CADENA  shift, and go to state 41
    REAL    shift, and go to state 42
    ID      shift, and go to state 103

    exp_simple  go to state 142


State 126

   26 ciclo: FOR PARENTA assig_st PUNTOCOMA • comparacion PUNTOCOMA assig_especial PARENTC bloque

    AND      shift, and go to state 83
    OR       shift, and go to state 84
    NOT      shift, and go to state 85
    PARENTA  shift, and go to state 86
    ENTERO   shift, and go to state 40
    CADENA   shift, and go to state 41
    REAL     shift, and go to state 42
    ID       shift, and go to state 87

    comparacion       go to state 143
    condicional_expr  go to state 115
    not_ex            go to state 91
    or_ex             go to state 92
    and_ex            go to state 93
    exp_simple        go to state 94


State 127

   25 ciclo: WHILE PARENTA expre PARENTC • bloque

    LLAVEA  shift, and go to state 29

    bloque  go to state 144


State 128

   59 anidar: PARENTA asig_compleja • PARENTC
   62 asig_compleja: asig_compleja • operador asig_compleja
   64              | asig_compleja • operador anidar

    MULT     shift, and go to state 75
    SUMA     shift, and go to state 76
    RESTA    shift, and go to state 77
    DIV      shift, and go to state 78
    MOD      shift, and go to state 79
    PARENTC  shift, and go to state 145

    operador  go to state 132


State 129

   48 assig_especial: ID ASIG • assig_especial

    ID  shift, and go to state 146

    assig_especial  go to state 99
    operador_incre  go to state 100


State 130

   60 anidar: anidar operador • anidar

    PARENTA  shift, and go to state 97

    anidar  go to state 147


State 131

   60 anidar: anidar operador • anidar
   63 asig_compleja: anidar operador • asig_compleja

    PARENTA  shift, and go to state 97
    ENTERO   shift, and go to state 40
    CADENA   shift, and go to state 41
    REAL     shift, and go to state 42
    ID       shift, and go to state 103

    anidar         go to state 148
    asig_compleja  go to state 149
    exp_simple     go to state 110


State 132

   62 asig_compleja: asig_compleja operador • asig_compleja
   64              | asig_compleja operador • anidar

    PARENTA  shift, and go to state 97
    ENTERO   shift, and go to state 40
    CADENA   shift, and go to state 41
    REAL     shift, and go to state 42
    ID       shift, and go to state 103

    anidar         go to state 150
    asig_compleja  go to state 151
    exp_simple     go to state 110


State 133

   29 comparacion: PARENTA comparacion PARENTC •

    $default  reduce using rule 29 (comparacion)


State 134

   23 condicional: IF PARENTA expre PARENTC bloque •
   24            | IF PARENTA expre PARENTC bloque • ELSE bloque

    ELSE  shift, and go to state 152

    $default  reduce using rule 23 (condicional)


State 135

   42 or_ex: comparacion • OR comparacion
   44 and_ex: comparacion • AND comparacion
   44       | comparacion AND comparacion •

    $default  reduce using rule 44 (and_ex)


State 136

   42 or_ex: comparacion • OR comparacion
   42      | comparacion OR comparacion •
   44 and_ex: comparacion • AND comparacion

    $default  reduce using rule 42 (or_ex)


State 137

   33 comparacion: exp_simple IGUAL exp_simple •

    $default  reduce using rule 33 (comparacion)


State 138

   30 comparacion: exp_simple MENORIGUAL exp_simple •

    $default  reduce using rule 30 (comparacion)


State 139

   31 comparacion: exp_simple MAYORIGUAL exp_simple •

    $default  reduce using rule 31 (comparacion)


State 140

   32 comparacion: exp_simple DIFERENTE exp_simple •

    $default  reduce using rule 32 (comparacion)


State 141

   35 comparacion: exp_simple MAYOR exp_simple •

    $default  reduce using rule 35 (comparacion)


State 142

   34 comparacion: exp_simple MENOR exp_simple •

    $default  reduce using rule 34 (comparacion)


State 143

   26 ciclo: FOR PARENTA assig_st PUNTOCOMA comparacion • PUNTOCOMA assig_especial PARENTC bloque
   42 or_ex: comparacion • OR comparacion
   44 and_ex: comparacion • AND comparacion

    AND        shift, and go to state 118
    OR         shift, and go to state 119
    PUNTOCOMA  shift, and go to state 153


State 144

   25 ciclo: WHILE PARENTA expre PARENTC bloque •

    $default  reduce using rule 25 (ciclo)


State 145

   59 anidar: PARENTA asig_compleja PARENTC •

    $default  reduce using rule 59 (anidar)


State 146

   46 assig_especial: ID • MENMEN
   47               | ID • MASMAS
   48               | ID • ASIG assig_especial
   50 operador_incre: ID • ope_espcial exp_simple

    ASIG      shift, and go to state 129
    MASMAS    shift, and go to state 61
    MENMEN    shift, and go to state 62
    ASIGMAS   shift, and go to state 63
    ASIGMEN   shift, and go to state 64
    ASIGMULT  shift, and go to state 65
    ASIGDIV   shift, and go to state 66

    ope_espcial  go to state 67


State 147

   60 anidar: anidar • operador anidar
   60       | anidar operador anidar •

    MULT   shift, and go to state 75
    SUMA   shift, and go to state 76
    RESTA  shift, and go to state 77
    DIV    shift, and go to state 78
    MOD    shift, and go to state 79

    MULT      [reduce using rule 60 (anidar)]
    SUMA      [reduce using rule 60 (anidar)]
    RESTA     [reduce using rule 60 (anidar)]
    DIV       [reduce using rule 60 (anidar)]
    MOD       [reduce using rule 60 (anidar)]
    $default  reduce using rule 60 (anidar)

    operador  go to state 130


State 148

   60 anidar: anidar • operador anidar
   60       | anidar operador anidar •
   63 asig_compleja: anidar • operador asig_compleja

    MULT   shift, and go to state 75
    SUMA   shift, and go to state 76
    RESTA  shift, and go to state 77
    DIV    shift, and go to state 78
    MOD    shift, and go to state 79

    MULT      [reduce using rule 60 (anidar)]
    SUMA      [reduce using rule 60 (anidar)]
    RESTA     [reduce using rule 60 (anidar)]
    DIV       [reduce using rule 60 (anidar)]
    MOD       [reduce using rule 60 (anidar)]
    $default  reduce using rule 60 (anidar)

    operador  go to state 131


State 149

   62 asig_compleja: asig_compleja • operador asig_compleja
   63              | anidar operador asig_compleja •
   64              | asig_compleja • operador anidar

    MULT   shift, and go to state 75
    SUMA   shift, and go to state 76
    RESTA  shift, and go to state 77
    DIV    shift, and go to state 78
    MOD    shift, and go to state 79

    MULT      [reduce using rule 63 (asig_compleja)]
    SUMA      [reduce using rule 63 (asig_compleja)]
    RESTA     [reduce using rule 63 (asig_compleja)]
    DIV       [reduce using rule 63 (asig_compleja)]
    MOD       [reduce using rule 63 (asig_compleja)]
    $default  reduce using rule 63 (asig_compleja)

    operador  go to state 132


State 150

   60 anidar: anidar • operador anidar
   63 asig_compleja: anidar • operador asig_compleja
   64              | asig_compleja operador anidar •

    MULT   shift, and go to state 75
    SUMA   shift, and go to state 76
    RESTA  shift, and go to state 77
    DIV    shift, and go to state 78
    MOD    shift, and go to state 79

    MULT      [reduce using rule 64 (asig_compleja)]
    SUMA      [reduce using rule 64 (asig_compleja)]
    RESTA     [reduce using rule 64 (asig_compleja)]
    DIV       [reduce using rule 64 (asig_compleja)]
    MOD       [reduce using rule 64 (asig_compleja)]
    $default  reduce using rule 64 (asig_compleja)

    operador  go to state 131


State 151

   62 asig_compleja: asig_compleja • operador asig_compleja
   62              | asig_compleja operador asig_compleja •
   64              | asig_compleja • operador anidar

    MULT   shift, and go to state 75
    SUMA   shift, and go to state 76
    RESTA  shift, and go to state 77
    DIV    shift, and go to state 78
    MOD    shift, and go to state 79

    MULT      [reduce using rule 62 (asig_compleja)]
    SUMA      [reduce using rule 62 (asig_compleja)]
    RESTA     [reduce using rule 62 (asig_compleja)]
    DIV       [reduce using rule 62 (asig_compleja)]
    MOD       [reduce using rule 62 (asig_compleja)]
    $default  reduce using rule 62 (asig_compleja)

    operador  go to state 132


State 152

   24 condicional: IF PARENTA expre PARENTC bloque ELSE • bloque

    LLAVEA  shift, and go to state 29

    bloque  go to state 154


State 153

   26 ciclo: FOR PARENTA assig_st PUNTOCOMA comparacion PUNTOCOMA • assig_especial PARENTC bloque

    ID  shift, and go to state 146

    assig_especial  go to state 155
    operador_incre  go to state 100


State 154

   24 condicional: IF PARENTA expre PARENTC bloque ELSE bloque •

    $default  reduce using rule 24 (condicional)


State 155

   26 ciclo: FOR PARENTA assig_st PUNTOCOMA comparacion PUNTOCOMA assig_especial • PARENTC bloque

    PARENTC  shift, and go to state 156


State 156

   26 ciclo: FOR PARENTA assig_st PUNTOCOMA comparacion PUNTOCOMA assig_especial PARENTC • bloque

    LLAVEA  shift, and go to state 29

    bloque  go to state 157


State 157

   26 ciclo: FOR PARENTA assig_st PUNTOCOMA comparacion PUNTOCOMA assig_especial PARENTC bloque •

    $default  reduce using rule 26 (ciclo)
